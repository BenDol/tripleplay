<?xml version="1.0" standalone="yes"?>
<project name="tripleplay" default="compile" xmlns:artifact="urn:maven-artifact-ant">
  <property name="target.dir"   location="target"/>
  <property name="src.dir"      location="src/main/java"/>
  <property name="tsrc.dir"     location="src/test/java"/>
  <property name="classes.dir"  location="${target.dir}/classes"/>
  <property name="tclasses.dir" location="${target.dir}/test-classes"/>

  <property name="ooo-build.vers" value="2.9"/>
  <ant antfile="etc/bootstrap.xml"/>
  <import file="${user.home}/.m2/ooo-build/${ooo-build.vers}/ooo-build.xml"/>

  <target name="-prepare" depends="-init-ooo">
    <mkdir dir="${target.dir}"/>

    <mavendep pom="pom.xml" id="compile"/>

    <mavendep pom="pom.xml" id="test" scope="test"/>
    <path id="test.classpath">
      <path refid="test.path"/>
      <pathelement location="${classes.dir}"/>
      <pathelement location="${tclasses.dir}"/>
    </path>
  </target>

  <target name="clean" depends="-init-ooo" description="Cleans out build results">
    <delete dir="${target.dir}"/>
  </target>

  <target name="compile" depends="-prepare" description="Builds the Java code.">
    <mkdir dir="${classes.dir}"/>
<!-- unused
    <copy todir="${classes.dir}"><fileset dir="src/main/resources" includes="**"/></copy>
-->
    <ooojavac srcdir="${src.dir}" destdir="${classes.dir}" classpathref="compile.path"/>
    <mkdir dir="${tclasses.dir}"/>
<!-- unused
    <copy todir="${tclasses.dir}"><fileset dir="src/test/resources" includes="**"/></copy>
-->
    <ooojavac srcdir="${tsrc.dir}" destdir="${tclasses.dir}" classpathref="test.classpath"/>
  </target>

  <target name="javadoc" depends="-prepare" description="Builds the Java documentation">
    <mkdir dir="${target.dir}/docs"/>
    <javadoc sourcepath="${src.dir}" destdir="${target.dir}/docs"
             additionalparam="-breakiterator" classpathref="compile.path">
      <link href="http://download.oracle.com/javase/6/docs/api/"/>
    </javadoc>
  </target>

  <property name="test" value=""/>
  <target name="test" depends="compile"
          description="Runs unit tests. Use -Dtest=Foo to run only FooTest.">
    <taskdef name="unit" classpathref="test.path"
      classname="org.apache.tools.ant.taskdefs.optional.junit.JUnitTask"/>
    <mkdir dir="${target.dir}/test-reports"/>
    <unit printsummary="off" haltonfailure="yes">
      <classpath refid="test.classpath"/>
      <formatter type="brief" usefile="false"/>
      <formatter type="xml"/>
      <batchtest todir="${target.dir}/test-reports">
        <fileset dir="${tsrc.dir}" includes="**/*${test}*Test.java"/>
      </batchtest>
    </unit>
  </target>

  <target name="widget-demo" depends="compile" description="Runs widget demo app.">
    <java fork="true" classpathref="test.classpath" classname="com.threerings.ui.WidgetDemo"/>
  </target>

  <target name="package" depends="test" description="Builds jar files.">
    <jar destfile="${target.dir}/${ant.project.name}.jar">
      <fileset dir="${classes.dir}" includes="**"/>
      <!-- include the source so that our jar can be used with GWT -->
      <fileset dir="${src.dir}" includes="**"/>
    </jar>
  </target>

  <target name="install" depends="package" description="Installs to local Maven repository.">
    <maveninstall file="${target.dir}/${ant.project.name}.jar" pom="pom.xml"/>
  </target>

  <target name="deploy" depends="package,javadoc" description="Deploys to remote Maven repository.">
    <mavendeploy file="${target.dir}/${ant.project.name}.jar" pom="pom.xml"
                 srcdir="${src.dir}" docdir="${target.dir}/docs"/>
  </target>
</project>
